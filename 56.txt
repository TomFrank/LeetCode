#include <iostream>
#include <algorithm>
#include <string>
#include <array>
#include <vector>
#include <numeric>
using namespace std;

class Solution {
public:
//    vector<vector<int>> merge(const vector<vector<int>>& intervals) {
//        auto a = intervals;
//        sort(a.begin(), a.end(), [](auto i,auto j){
//            if (i[0] != j[0]) return i[0] < j[0];
//            return i[1] < j[1];
//        });
//        for (int i=1; i<a.size(); ) {
//            if (a[i][0] <= a[i-1][1]) {
//                if (a[i][1] >= a[i-1][1]) {
//                    a[i][0] = a[i-1][0];
//                    a.erase(a.begin() + i-1);
//                } else {
//                    a.erase(a.begin() + i);
//                }
//            } else ++i;
//        }
//        return a;
//    }
    vector<vector<int>> merge(const vector<vector<int>>& intervals) {
        auto a = intervals;
        sort(a.begin(), a.end());
        
        vector<vector<int>> res;
        for (auto i: a) {
            if (res.empty() || i[0] > res.back()[1])
                res.push_back(i);
            
            if (i[0] <= res.back()[1])
                res.back()[1] = max(res.back()[1], i[1]);
        }
        
        return res;
    }
};

int main(int argc, char *argv[]) {
    vector<vector<vector<int>>> input = {
        {{1,3},{2,6},{8,10},{15,18}},
        {{1,4},{4,5}},
        {{1,4},{2,3}},
        {{2,3},{1,4},{2,4},{3,5}},
        {{1,2},{2,3},{1,3},{5,7},{8,9},{8,10}}
    };
    for_each(input.cbegin(), input.cend(), [](auto a){
        auto res = Solution().merge(a);
        for_each(res.cbegin(), res.cend(), [](auto a){
            cout << "[" << a[0] << "," << a[1] << "],";
        });
        cout << endl;
    });
}